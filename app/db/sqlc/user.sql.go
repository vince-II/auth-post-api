// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user.sql

package sqlc

import (
	"context"
)

const GetUserById = `-- name: GetUserById :one
SELECT id, first_name, last_name FROM users WHERE id = $1
`

func (q *Queries) GetUserById(ctx context.Context, id int32) (User, error) {
	row := q.db.QueryRow(ctx, GetUserById, id)
	var i User
	err := row.Scan(&i.ID, &i.FirstName, &i.LastName)
	return i, err
}

const RegisterUser = `-- name: RegisterUser :one
INSERT INTO users (first_name, last_name)
VALUES ($1, $2) 
RETURNING id, first_name, last_name
`

type RegisterUserParams struct {
	FirstName string `json:"first_name"`
	LastName  string `json:"last_name"`
}

func (q *Queries) RegisterUser(ctx context.Context, arg RegisterUserParams) (User, error) {
	row := q.db.QueryRow(ctx, RegisterUser, arg.FirstName, arg.LastName)
	var i User
	err := row.Scan(&i.ID, &i.FirstName, &i.LastName)
	return i, err
}
